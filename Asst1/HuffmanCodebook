\
sizeof(char));	00000000
nums	00000001000000000000
array	0000000100000000000100000
freq	00000001000000000001000010
size);	00000001000000000001000011
"/");	0000000100000000000100010
dir->d_name);	000000010000000000010001100
"-d"};	000000010000000000010001101
flags[j])==0){	000000010000000000010001110
buffer	000000010000000000010001111
16	000000010000000000010010
13	0000000100000000000100110
int	0000000100000000000100111
file_len)	0000000100000000000101000
const	00000001000000000001010010
flags[i]	000000010000000000010100110
flagValues[i]);	0000000100000000000101001110
argv[1+numFlags]);	00000001000000000001010011110
filePath);	000000010000000000010100111110
NULL);	00000001000000000001010011111100
".");	00000001000000000001010011111101
ar"copying	000000010000000000010100111111100
file_name	000000010000000000010100111111101
fullPath);	0000000100000000000101001111111100
#include	0000000100000000000101001111111101
45	00000001000000000001010011111111100
O_WRONLY	00000001000000000001010011111111101
int	000000010000000000010100111111111100
12	000000010000000000010100111111111101
fullPath);	0000000100000000000101001111111111100
'f'	00000001000000000001010011111111111010
'e'	000000010000000000010100111111111110110
'	0000000100000000000101001111111111101110
file_name	000000010000000000010100111111111110111100
s[p2]);	000000010000000000010100111111111110111101
\	0000000100000000000101001111111111101111100
#include	0000000100000000000101001111111111101111101
'b'	000000010000000000010100111111111110111111
path);	0000000100000000000101001111111111110
"-c"	00000001000000000001010011111111111110
"-b"	000000010000000000010100111111111111110
&st);	0000000100000000000101001111111111111110
O_WRONLY	00000001000000000001010011111111111111110
0	000000010000000000010100111111111111111110
O_RDONLY);	0000000100000000000101001111111111111111110
dir->d_name);	00000001000000000001010011111111111111111110
0666);	000000010000000000010100111111111111111111110
file	0000000100000000000101001111111111111111111110
0	00000001000000000001010011111111111111111111110
fd);	000000010000000000010100111111111111111111111110
dir->d_name);	0000000100000000000101001111111111111111111111110
decompress};	00000001000000000001010011111111111111111111111110
compress	000000010000000000010100111111111111111111111111110
fullPath);	0000000100000000000101001111111111111111111111111110
char	00000001000000000001010011111111111111111111111111110
int	000000010000000000010100111111111111111111111111111110
int	0000000100000000000101001111111111111111111111111111110
dir->d_name);	00000001000000000001010011111111111111111111111111111110
1000)	0000000100000000000101001111111111111111111111111111111100
buffer	0000000100000000000101001111111111111111111111111111111101
HOME)	00000001000000000001010011111111111111111111111111111111100
path);	00000001000000000001010011111111111111111111111111111111101
then	000000010000000000010100111111111111111111111111111111111100
print	0000000100000000000101001111111111111111111111111111111111010
root->data);	00000001000000000001010011111111111111111111111111111111110110
root->data	000000010000000000010100111111111111111111111111111111111101110
strlen(root->data));	0000000100000000000101001111111111111111111111111111111111011110
"\t"	00000001000000000001010011111111111111111111111111111111110111110
1);	000000010000000000010100111111111111111111111111111111111101111110
dir->d_name);	0000000100000000000101001111111111111111111111111111111111011111110
buffer	00000001000000000001010011111111111111111111111111111111110111111110
int	000000010000000000010100111111111111111111111111111111111101111111110
int	0000000100000000000101001111111111111111111111111111111111011111111110
freq	00000001000000000001010011111111111111111111111111111111110111111111110
outname);	000000010000000000010100111111111111111111111111111111111101111111111110
char	0000000100000000000101001111111111111111111111111111111111011111111111110
#include	00000001000000000001010011111111111111111111111111111111110111111111111110
0666);	000000010000000000010100111111111111111111111111111111111101111111111111110
"\\\n"	0000000100000000000101001111111111111111111111111111111111011111111111111110
2);	00000001000000000001010011111111111111111111111111111111110111111111111111110
0666);	000000010000000000010100111111111111111111111111111111111101111111111111111110
top	0000000100000000000101001111111111111111111111111111111111011111111111111111110
codebook);	00000001000000000001010011111111111111111111111111111111110111111111111111111110
buffer);	000000010000000000010100111111111111111111111111111111111101111111111111111111110
1);	0000000100000000000101001111111111111111111111111111111111011111111111111111111110
int	00000001000000000001010011111111111111111111111111111111110111111111111111111111110
int	000000010000000000010100111111111111111111111111111111111101111111111111111111111110
char	0000000100000000000101001111111111111111111111111111111111011111111111111111111111110
O_RDONLY	00000001000000000001010011111111111111111111111111111111110111111111111111111111111110
0666);	000000010000000000010100111111111111111111111111111111111101111111111111111111111111110
file	0000000100000000000101001111111111111111111111111111111111011111111111111111111111111110
ArrayList	00000001000000000001010011111111111111111111111111111111110111111111111111111111111111110
0666);	000000010000000000010100111111111111111111111111111111111101111111111111111111111111111110
O_WRONLY	0000000100000000000101001111111111111111111111111111111111011111111111111111111111111111110
ArrayList	00000001000000000001010011111111111111111111111111111111110111111111111111111111111111111110
outname);	000000010000000000010100111111111111111111111111111111111101111111111111111111111111111111110
O_RDONLY);	000000010000000000010100111111111111111111111111111111111101111111111111111111111111111111111
buffer);	000000010000000000010100111111111111111111111111111111111110
O_WRONLY	0000000100000000000101001111111111111111111111111111111111110
s[p2]);	00000001000000000001010011111111111111111111111111111111111110
whitespace	000000010000000000010100111111111111111111111111111111111111110
path);	0000000100000000000101001111111111111111111111111111111111111110
'&&	00000001000000000001010011111111111111111111111111111111111111110
t);	000000010000000000010100111111111111111111111111111111111111111110
dir->d_name);	0000000100000000000101001111111111111111111111111111111111111111110
strlen(buffer));	00000001000000000001010011111111111111111111111111111111111111111110
size);	000000010000000000010100111111111111111111111111111111111111111111110
p2	0000000100000000000101001111111111111111111111111111111111111111111110
char	00000001000000000001010011111111111111111111111111111111111111111111110
p1	000000010000000000010100111111111111111111111111111111111111111111111110
'	0000000100000000000101001111111111111111111111111111111111111111111111110
char	00000001000000000001010011111111111111111111111111111111111111111111111110
buffer	000000010000000000010100111111111111111111111111111111111111111111111111110
".hcz");	0000000100000000000101001111111111111111111111111111111111111111111111111110
O_RDONLY);	00000001000000000001010011111111111111111111111111111111111111111111111111110
HOME)	000000010000000000010100111111111111111111111111111111111111111111111111111110
ArrayList	00000001000000000001010011111111111111111111111111111111111111111111111111111100
int	00000001000000000001010011111111111111111111111111111111111111111111111111111101000
int	00000001000000000001010011111111111111111111111111111111111111111111111111111101001
file_len)	0000000100000000000101001111111111111111111111111111111111111111111111111111110101
"%d"	000000010000000000010100111111111111111111111111111111111111111111111111111111011000
#include	0000000100000000000101001111111111111111111111111111111111111111111111111111110110010
dir->d_name);	00000001000000000001010011111111111111111111111111111111111111111111111111111101100110
1);	000000010000000000010100111111111111111111111111111111111111111111111111111111011001110
arr[i]);	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011110
"\n"	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111110
const	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111110
int	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111110
int	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111110
"test");	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111110
int	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111110
int	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111110
*right	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111111110
dir->d_name);	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111111110
PARENT)	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111110
outname);	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111111111110
dir->d_name);	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111111111110
not	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111111110
left->freq	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111111111111110
top);	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111111111111110
int	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111111111110
int	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111111111111111110
int	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111111111111111110
arr	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111111111111110
dir->d_name);	000000010000000000010100111111111111111111111111111111111111111111111111111111011001111111111111111111111110
"/");	0000000100000000000101001111111111111111111111111111111111111111111111111111110110011111111111111111111111110
1000);	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111111111111111110
buffer);	00000001000000000001010011111111111111111111111111111111111111111111111111111101100111111111111111111111111111
char	000000010000000000010100111111111111111111111111111111111111111111111111111111011010
O_RDONLY);	000000010000000000010100111111111111111111111111111111111111111111111111111111011011
arr[i]);	0000000100000000000101001111111111111111111111111111111111111111111111111111110111
'&&	00000001000000000001010011111111111111111111111111111111111111111111111111111110
".");	000000010000000000010100111111111111111111111111111111111111111111111111111111110
file_name);	000000010000000000010100111111111111111111111111111111111111111111111111111111111000
buffer	000000010000000000010100111111111111111111111111111111111111111111111111111111111001
ArrayList	00000001000000000001010011111111111111111111111111111111111111111111111111111111101
array);	0000000100000000000101001111111111111111111111111111111111111111111111111111111111
dir->d_name);	000000010000000000010101
9	000000010000000000010110
s[p2]);	0000000100000000000101110
'd'	00000001000000000001011110
MAXIMUM)	000000010000000000010111110
PARENT)	00000001000000000001011111100
buffer	00000001000000000001011111101
'c'	0000000100000000000101111111
"faded"	000000010000000000011
int	0000000100000000001
p2	000000010000000001
str);	00000001000000001
c	0000000100000001
token	000000010000001
s[p2]);	00000001000001
0};	0000000100001
top	000000010001
print	00000001001
struct	0000000101
unsigned	000000011
ELF	0000001000000000000
t);	0000001000000000001
root->data);	000000100000000001
top);	00000010000000001
"error"	0000001000000001
"cock"	000000100000001
t);	00000010000001
#include	0000001000001
r	000000100001
top	00000010001
top	0000001001
then	000000101
int	00000011
"/");	000001000000000000
fd);	000001000000000001
str);	00000100000000001
arr	0000010000000001
ArrayList	000001000000001
size);	00000100000001
test2	0000010000001
INT_MAX)>0){	000001000001
12	00000100001
p1	0000010001
tokenize:	000001001
'&&	00000101
'&&	0000011
0);	00001000000000000
&minHeap->array[idx]);	00001000000000001
smallest);	0000100000000001
i);	000010000000001
dir->d_name	00001000000001
&st);	0000100000001
"/");	000010000001
1);	00001000001
freq	0000100001
there	000010001
file_len);	00001001
1000)	0000101
top	000011
size);	0001000000000000
O_RDONLY);	0001000000000001
top	000100000000001
whitespace	00010000000001
t);	0001000000001
"dick"	000100000001
array->token_list[i]->str);	00010000001
size);	0001000001
16	000100001
freq	00010001
top	0001001
dir->d_name);	000101
int	00011
int	001000000000000
size);	001000000000001
p1	00100000000001
"bitchesssss"	0010000000001
p1	001000000001
t->num);	00100000001
path);	0010000001
dir->d_name);	001000001
c);	00100001
num);	0010001
'	001001
int	00101
9	0011
int	01000000000000
"\n"	01000000000001
struct	0100000000001
str	010000000001
'	01000000001
int	0100000001
p2	010000001
char	01000001
45	0100001
freq[i]);	010001
2);	01001
c	0101
file	011
str);	1000000000000
p2	1000000000001
13	100000000001
arr	10000000001
top);	1000000001
int	100000001
outname);	10000001
arr	1000001
".hcz");	100001
fd);	10001
*top;	1001
array);	101
buffer	11
